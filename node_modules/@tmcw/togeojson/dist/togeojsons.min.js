!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).toGeoJSON={})}(this,function(e){"use strict";function t(e){return e&&e.normalize&&e.normalize(),e&&e.textContent||""}function n(e){const n={};if(e){const o=i(e,"line");if(o){const e=t(i(o,"color")),r=parseFloat(t(i(o,"opacity"))),s=parseFloat(t(i(o,"width")));e&&(n.stroke=e),isNaN(r)||(n["stroke-opacity"]=r),isNaN(s)||(n["stroke-width"]=96*s/25.4)}}return n}function o(e,n){const o={};let r,s;for(s=0;s<n.length;s++)(r=i(e,n[s]))&&(o[n[s]]=t(r));return o}function r(e){const t=o(e,["name","cmt","desc","type","time","keywords"]),n=e.getElementsByTagName("link");n.length&&(t.links=[]);for(let e=0;e<n.length;e++)t.links.push(Object.assign({href:n[e].getAttribute("href")},o(n[e],["text","type"])));return t}function i(e,t){const n=e.getElementsByTagName(t);return n.length?n[0]:null}function s(e){const n=[parseFloat(e.getAttribute("lon")),parseFloat(e.getAttribute("lat"))],o=i(e,"ele"),r=i(e,"gpxtpx:hr")||i(e,"hr"),s=i(e,"time");let l;return o&&(l=parseFloat(t(o)),isNaN(l)||n.push(l)),{coordinates:n,time:s?t(s):null,heartRate:r?parseFloat(t(r)):null}}function l(e){const t=a(e,"rtept");if(t.line)return{type:"Feature",properties:Object.assign(r(e),n(i(e,"extensions"))),geometry:{type:"LineString",coordinates:t.line}}}function a(e,t){const n=e.getElementsByTagName(t),o=[],r=[],i=n.length;let l=void 0;if(i<2)return{};for(let e=0;e<i;e++){const t=s(n[e]);o.push(t.coordinates),t.time&&r.push(t.time),(t.heartRate||l)&&(l||(l=Array(e).fill(null)),l.push(t.heartRate||null))}return{line:o,times:r,heartRates:l||[]}}function g(e){const t=e.getElementsByTagName("trkseg"),o=[],s=[],l=[];let g;for(let e=0;e<t.length;e++)if((g=a(t[e],"trkpt"))&&(g.line&&o.push(g.line),g.times&&g.times.length&&s.push(g.times),l.length||g.heartRates&&g.heartRates.length)){if(!l.length)for(let t=0;t<e;t++)l.push(Array(o[t].length).fill(null));g.heartRates&&g.heartRates.length?l.push(g.heartRates):l.push(Array(g.line.length||0).fill(null))}if(0===o.length)return;const c=Object.assign(r(e),n(i(e,"extensions")));return s.length&&(c.coordTimes=1===o.length?s[0]:s),l.length&&(c.heartRates=1===o.length?l[0]:l),{type:"Feature",properties:c,geometry:{type:1===o.length?"LineString":"MultiLineString",coordinates:1===o.length?o[0]:o}}}function*c(e){const t=e.getElementsByTagName("trk"),n=e.getElementsByTagName("rte"),i=e.getElementsByTagName("wpt");for(let e=0;e<t.length;e++){const n=g(t[e]);n&&(yield n)}for(let e=0;e<n.length;e++){const t=l(n[e]);t&&(yield t)}for(let e=0;e<i.length;e++)yield(a=i[e],{type:"Feature",properties:Object.assign(r(a),o(a,["sym"])),geometry:{type:"Point",coordinates:s(a).coordinates}});var a}const u=/\s*/g,m=/^\s*|\s*$/g,f=/\s+/;function h(e){if(!e||!e.length)return 0;let t=0;for(let n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n)|0;return t}function p(e,t){const n=e.getElementsByTagName(t);return n.length?n[0]:null}function y(e){return e.replace(u,"").split(",").map(parseFloat)}function d(e){return e.replace(m,"").split(f).map(y)}function N(e){if(void 0!==e.xml)return e.xml;if(e.tagName){let t=e.tagName;for(let n=0;n<e.attributes.length;n++)t+=e.attributes[n].name+e.attributes[n].value;for(let n=0;n<e.childNodes.length;n++)t+=N(e.childNodes[n]);return t}return"#text"===e.nodeName?(e.nodeValue||e.value||"").trim():"#cdata-section"===e.nodeName?e.nodeValue:""}const T=["Polygon","LineString","Point","Track","gx:Track"];function b(e){let t,n;return"#"===(e=e||"").substr(0,1)&&(e=e.substr(1)),6!==e.length&&3!==e.length||(t=e),8===e.length&&(n=parseInt(e.substr(0,2),16)/255,t="#"+e.substr(6,2)+e.substr(4,2)+e.substr(2,2)),[t,isNaN(n)?void 0:n]}function k(e){let n=e.getElementsByTagName("coord");const o=[],r=[];0===n.length&&(n=e.getElementsByTagName("gx:coord"));for(let e=0;e<n.length;e++)o.push(t(n[e]).split(" ").map(parseFloat));const i=e.getElementsByTagName("when");for(let e=0;e<i.length;e++)r.push(t(i[e]));return{coords:o,times:r}}function x(e,n,o,r){const i=function e(n){let o,r,i,s,l;const a=[],g=[];if(p(n,"MultiGeometry"))return e(p(n,"MultiGeometry"));if(p(n,"MultiTrack"))return e(p(n,"MultiTrack"));if(p(n,"gx:MultiTrack"))return e(p(n,"gx:MultiTrack"));for(i=0;i<T.length;i++)if(r=n.getElementsByTagName(T[i]))for(s=0;s<r.length;s++)if(o=r[s],"Point"===T[i])a.push({type:"Point",coordinates:y(t(p(o,"coordinates")))});else if("LineString"===T[i])a.push({type:"LineString",coordinates:d(t(p(o,"coordinates")))});else if("Polygon"===T[i]){const e=o.getElementsByTagName("LinearRing"),n=[];for(l=0;l<e.length;l++)n.push(d(t(p(e[l],"coordinates"))));a.push({type:"Polygon",coordinates:n})}else if("Track"===T[i]||"gx:Track"===T[i]){const e=k(o);a.push({type:"LineString",coordinates:e.coords}),e.times.length&&g.push(e.times)}return{geoms:a,coordTimes:g}}(e);let s;const l={},a=t(p(e,"name")),g=t(p(e,"address"));let c=t(p(e,"styleUrl"));const u=t(p(e,"description")),m=p(e,"TimeSpan"),f=p(e,"TimeStamp"),h=p(e,"ExtendedData");let N=p(e,"LineStyle"),x=p(e,"PolyStyle");const E=p(e,"visibility");if(!i.geoms.length)return;if(a&&(l.name=a),g&&(l.address=g),c){"#"!==c[0]&&(c="#"+c),l.styleUrl=c,n[c]&&(l.styleHash=n[c]),o[c]&&(l.styleMapHash=o[c],l.styleHash=n[o[c].normal]);const e=r[l.styleHash];if(e){N||(N=p(e,"LineStyle")),x||(x=p(e,"PolyStyle"));const n=p(e,"IconStyle");if(n){const e=p(n,"Icon");if(e){const n=t(p(e,"href"));n&&(l.icon=n)}}}}if(u&&(l.description=u),m){const e=t(p(m,"begin")),n=t(p(m,"end"));l.timespan={begin:e,end:n}}if(f&&(l.timestamp=t(p(f,"when"))),N){const e=b(t(p(N,"color"))),n=e[0],o=e[1],r=parseFloat(t(p(N,"width")));n&&(l.stroke=n),isNaN(o)||(l["stroke-opacity"]=o),isNaN(r)||(l["stroke-width"]=r)}if(x){const e=b(t(p(x,"color"))),n=e[0],o=e[1],r=t(p(x,"fill")),i=t(p(x,"outline"));n&&(l.fill=n),isNaN(o)||(l["fill-opacity"]=o),r&&(l["fill-opacity"]="1"===r?l["fill-opacity"]||1:0),i&&(l["stroke-opacity"]="1"===i?l["stroke-opacity"]||1:0)}if(h){const e=h.getElementsByTagName("Data"),n=h.getElementsByTagName("SimpleData");for(s=0;s<e.length;s++)l[e[s].getAttribute("name")]=t(p(e[s],"value"));for(s=0;s<n.length;s++)l[n[s].getAttribute("name")]=t(n[s])}E&&(l.visibility=t(E)),i.coordTimes.length&&(l.coordTimes=1===i.coordTimes.length?i.coordTimes[0]:i.coordTimes);const S={type:"Feature",geometry:1===i.geoms.length?i.geoms[0]:{type:"GeometryCollection",geometries:i.geoms},properties:l};return e.getAttribute("id")&&(S.id=e.getAttribute("id")),S}function*E(e){const n={},o={},r={},i=e.getElementsByTagName("Placemark"),s=e.getElementsByTagName("Style"),l=e.getElementsByTagName("StyleMap");for(let e=0;e<s.length;e++){const t=h(N(s[e])).toString(16);n["#"+s[e].getAttribute("id")]=t,o[t]=s[e]}for(let e=0;e<l.length;e++){n["#"+l[e].getAttribute("id")]=h(N(l[e])).toString(16);const o=l[e].getElementsByTagName("Pair"),i={};for(let e=0;e<o.length;e++)i[t(p(o[e],"key"))]=t(p(o[e],"styleUrl"));r["#"+l[e].getAttribute("id")]=i}for(let e=0;e<i.length;e++){const t=x(i[e],n,r,o);t&&(yield t)}}e.gpx=function(e){return{type:"FeatureCollection",features:Array.from(c(e))}},e.gpxGen=c,e.kml=function(e){return{type:"FeatureCollection",features:Array.from(E(e))}},e.kmlGen=E,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=togeojsons.min.js.map
