{"version":3,"file":"togeojsons.min.js","sources":["../lib/shared.js","../lib/gpx.js","../lib/kml.js"],"sourcesContent":["// cast array x into numbers\n// get the content of a text node, if any\nexport function nodeVal(x) {\n  if (x && x.normalize) {\n    x.normalize();\n  }\n  return (x && x.textContent) || \"\";\n}\n","import { nodeVal } from \"./shared\";\n\nfunction getLineStyle(extensions) {\n  const style = {};\n  if (extensions) {\n    const lineStyle = get1(extensions, \"line\");\n    if (lineStyle) {\n      const color = nodeVal(get1(lineStyle, \"color\")),\n        opacity = parseFloat(nodeVal(get1(lineStyle, \"opacity\"))),\n        width = parseFloat(nodeVal(get1(lineStyle, \"width\")));\n      if (color) style.stroke = color;\n      if (!isNaN(opacity)) style[\"stroke-opacity\"] = opacity;\n      // GPX width is in mm, convert to px with 96 px per inch\n      if (!isNaN(width)) style[\"stroke-width\"] = (width * 96) / 25.4;\n    }\n  }\n  return style;\n}\n\n// get the contents of multiple text nodes, if present\nfunction getMulti(x, ys) {\n  const o = {};\n  let n;\n  let k;\n  for (k = 0; k < ys.length; k++) {\n    n = get1(x, ys[k]);\n    if (n) o[ys[k]] = nodeVal(n);\n  }\n  return o;\n}\nfunction getProperties(node) {\n  const prop = getMulti(node, [\n    \"name\",\n    \"cmt\",\n    \"desc\",\n    \"type\",\n    \"time\",\n    \"keywords\"\n  ]);\n  const links = node.getElementsByTagName(\"link\");\n  if (links.length) prop.links = [];\n  for (let i = 0; i < links.length; i++) {\n    prop.links.push(\n      Object.assign(\n        { href: links[i].getAttribute(\"href\") },\n        getMulti(links[i], [\"text\", \"type\"])\n      )\n    );\n  }\n  return prop;\n}\n\n// one Y child of X, if any, otherwise null\nfunction get1(x, y) {\n  const n = x.getElementsByTagName(y);\n  return n.length ? n[0] : null;\n}\n\nfunction coordPair(x) {\n  const ll = [\n    parseFloat(x.getAttribute(\"lon\")),\n    parseFloat(x.getAttribute(\"lat\"))\n  ];\n  const ele = get1(x, \"ele\");\n  // handle namespaced attribute in browser\n  const heartRate = get1(x, \"gpxtpx:hr\") || get1(x, \"hr\");\n  const time = get1(x, \"time\");\n  let e;\n  if (ele) {\n    e = parseFloat(nodeVal(ele));\n    if (!isNaN(e)) {\n      ll.push(e);\n    }\n  }\n  return {\n    coordinates: ll,\n    time: time ? nodeVal(time) : null,\n    heartRate: heartRate ? parseFloat(nodeVal(heartRate)) : null\n  };\n}\nfunction getRoute(node) {\n  const line = getPoints(node, \"rtept\");\n  if (!line.line) return;\n  return {\n    type: \"Feature\",\n    properties: Object.assign(\n      getProperties(node),\n      getLineStyle(get1(node, \"extensions\"))\n    ),\n    geometry: {\n      type: \"LineString\",\n      coordinates: line.line\n    }\n  };\n}\nfunction getPoints(node, pointname) {\n  const pts = node.getElementsByTagName(pointname);\n  const line = [];\n  const times = [];\n  const l = pts.length;\n  let heartRates = undefined;\n  if (l < 2) return {}; // Invalid line in GeoJSON\n  for (let i = 0; i < l; i++) {\n    const c = coordPair(pts[i]);\n    line.push(c.coordinates);\n    if (c.time) times.push(c.time);\n    if (c.heartRate || heartRates) {\n      if (!heartRates) heartRates = Array(i).fill(null);\n      heartRates.push(c.heartRate || null);\n    }\n  }\n  return {\n    line: line,\n    times: times,\n    heartRates: heartRates || []\n  };\n}\nfunction getTrack(node) {\n  const segments = node.getElementsByTagName(\"trkseg\");\n  const track = [];\n  const times = [];\n  const heartRates = [];\n  let line;\n  for (let i = 0; i < segments.length; i++) {\n    line = getPoints(segments[i], \"trkpt\");\n    if (line) {\n      if (line.line) track.push(line.line);\n      if (line.times && line.times.length) times.push(line.times);\n      if (heartRates.length || (line.heartRates && line.heartRates.length)) {\n        if (!heartRates.length) {\n          for (let s = 0; s < i; s++) {\n            heartRates.push(Array(track[s].length).fill(null));\n          }\n        }\n        if (line.heartRates && line.heartRates.length) {\n          heartRates.push(line.heartRates);\n        } else {\n          heartRates.push(Array(line.line.length || 0).fill(null));\n        }\n      }\n    }\n  }\n  if (track.length === 0) return;\n  const properties = Object.assign(\n    getProperties(node),\n    getLineStyle(get1(node, \"extensions\"))\n  );\n  if (times.length)\n    properties.coordTimes = track.length === 1 ? times[0] : times;\n  if (heartRates.length)\n    properties.heartRates = track.length === 1 ? heartRates[0] : heartRates;\n  return {\n    type: \"Feature\",\n    properties: properties,\n    geometry: {\n      type: track.length === 1 ? \"LineString\" : \"MultiLineString\",\n      coordinates: track.length === 1 ? track[0] : track\n    }\n  };\n}\n\nfunction getPoint(node) {\n  return {\n    type: \"Feature\",\n    properties: Object.assign(getProperties(node), getMulti(node, [\"sym\"])),\n    geometry: {\n      type: \"Point\",\n      coordinates: coordPair(node).coordinates\n    }\n  };\n}\n\nexport function* gpxGen(doc) {\n  const tracks = doc.getElementsByTagName(\"trk\");\n  const routes = doc.getElementsByTagName(\"rte\");\n  const waypoints = doc.getElementsByTagName(\"wpt\");\n\n  for (let i = 0; i < tracks.length; i++) {\n    const feature = getTrack(tracks[i]);\n    if (feature) yield feature;\n  }\n  for (let i = 0; i < routes.length; i++) {\n    const feature = getRoute(routes[i]);\n    if (feature) yield feature;\n  }\n  for (let i = 0; i < waypoints.length; i++) {\n    yield getPoint(waypoints[i]);\n  }\n}\n\nexport function gpx(doc) {\n  return {\n    type: \"FeatureCollection\",\n    features: Array.from(gpxGen(doc))\n  };\n}\n","import { nodeVal } from \"./shared\";\n\nconst removeSpace = /\\s*/g;\nconst trimSpace = /^\\s*|\\s*$/g;\nconst splitSpace = /\\s+/;\n\n// generate a short, numeric hash of a string\nfunction okhash(x) {\n  if (!x || !x.length) return 0;\n  let h = 0;\n  for (let i = 0; i < x.length; i++) {\n    h = ((h << 5) - h + x.charCodeAt(i)) | 0;\n  }\n  return h;\n}\n\n// one Y child of X, if any, otherwise null\nfunction get1(x, y) {\n  const n = x.getElementsByTagName(y);\n  return n.length ? n[0] : null;\n}\n\n// get one coordinate from a coordinate array, if any\nfunction coord1(v) {\n  return v\n    .replace(removeSpace, \"\")\n    .split(\",\")\n    .map(parseFloat);\n}\n\n// get all coordinates from a coordinate array as [[],[]]\nfunction coord(v) {\n  return v\n    .replace(trimSpace, \"\")\n    .split(splitSpace)\n    .map(coord1);\n}\n\nfunction xml2str(node) {\n  if (node.xml !== undefined) return node.xml;\n  if (node.tagName) {\n    let output = node.tagName;\n    for (let i = 0; i < node.attributes.length; i++) {\n      output += node.attributes[i].name + node.attributes[i].value;\n    }\n    for (let i = 0; i < node.childNodes.length; i++) {\n      output += xml2str(node.childNodes[i]);\n    }\n    return output;\n  }\n  if (node.nodeName === \"#text\") {\n    return (node.nodeValue || node.value || \"\").trim();\n  }\n  if (node.nodeName === \"#cdata-section\") {\n    return node.nodeValue;\n  }\n  return \"\";\n}\n\nconst geotypes = [\"Polygon\", \"LineString\", \"Point\", \"Track\", \"gx:Track\"];\n\nfunction kmlColor(v) {\n  let color, opacity;\n  v = v || \"\";\n  if (v.substr(0, 1) === \"#\") {\n    v = v.substr(1);\n  }\n  if (v.length === 6 || v.length === 3) {\n    color = v;\n  }\n  if (v.length === 8) {\n    opacity = parseInt(v.substr(0, 2), 16) / 255;\n    color = \"#\" + v.substr(6, 2) + v.substr(4, 2) + v.substr(2, 2);\n  }\n  return [color, isNaN(opacity) ? undefined : opacity];\n}\n\nfunction gxCoords(root) {\n  let elems = root.getElementsByTagName(\"coord\");\n  const coords = [];\n  const times = [];\n  if (elems.length === 0) elems = root.getElementsByTagName(\"gx:coord\");\n  for (let i = 0; i < elems.length; i++) {\n    coords.push(\n      nodeVal(elems[i])\n        .split(\" \")\n        .map(parseFloat)\n    );\n  }\n  const timeElems = root.getElementsByTagName(\"when\");\n  for (let j = 0; j < timeElems.length; j++) times.push(nodeVal(timeElems[j]));\n  return {\n    coords: coords,\n    times: times\n  };\n}\n\nfunction getGeometry(root) {\n  let geomNode;\n  let geomNodes;\n  let i;\n  let j;\n  let k;\n  const geoms = [];\n  const coordTimes = [];\n  if (get1(root, \"MultiGeometry\")) {\n    return getGeometry(get1(root, \"MultiGeometry\"));\n  }\n  if (get1(root, \"MultiTrack\")) {\n    return getGeometry(get1(root, \"MultiTrack\"));\n  }\n  if (get1(root, \"gx:MultiTrack\")) {\n    return getGeometry(get1(root, \"gx:MultiTrack\"));\n  }\n  for (i = 0; i < geotypes.length; i++) {\n    geomNodes = root.getElementsByTagName(geotypes[i]);\n    if (geomNodes) {\n      for (j = 0; j < geomNodes.length; j++) {\n        geomNode = geomNodes[j];\n        if (geotypes[i] === \"Point\") {\n          geoms.push({\n            type: \"Point\",\n            coordinates: coord1(nodeVal(get1(geomNode, \"coordinates\")))\n          });\n        } else if (geotypes[i] === \"LineString\") {\n          geoms.push({\n            type: \"LineString\",\n            coordinates: coord(nodeVal(get1(geomNode, \"coordinates\")))\n          });\n        } else if (geotypes[i] === \"Polygon\") {\n          const rings = geomNode.getElementsByTagName(\"LinearRing\"),\n            coords = [];\n          for (k = 0; k < rings.length; k++) {\n            coords.push(coord(nodeVal(get1(rings[k], \"coordinates\"))));\n          }\n          geoms.push({\n            type: \"Polygon\",\n            coordinates: coords\n          });\n        } else if (geotypes[i] === \"Track\" || geotypes[i] === \"gx:Track\") {\n          const track = gxCoords(geomNode);\n          geoms.push({\n            type: \"LineString\",\n            coordinates: track.coords\n          });\n          if (track.times.length) coordTimes.push(track.times);\n        }\n      }\n    }\n  }\n  return {\n    geoms: geoms,\n    coordTimes: coordTimes\n  };\n}\n\nfunction getPlacemark(root, styleIndex, styleMapIndex, styleByHash) {\n  const geomsAndTimes = getGeometry(root);\n  let i;\n  const properties = {};\n  const name = nodeVal(get1(root, \"name\"));\n  const address = nodeVal(get1(root, \"address\"));\n  let styleUrl = nodeVal(get1(root, \"styleUrl\"));\n  const description = nodeVal(get1(root, \"description\"));\n  const timeSpan = get1(root, \"TimeSpan\");\n  const timeStamp = get1(root, \"TimeStamp\");\n  const extendedData = get1(root, \"ExtendedData\");\n  let lineStyle = get1(root, \"LineStyle\");\n  let polyStyle = get1(root, \"PolyStyle\");\n  const visibility = get1(root, \"visibility\");\n\n  if (!geomsAndTimes.geoms.length) return;\n  if (name) properties.name = name;\n  if (address) properties.address = address;\n  if (styleUrl) {\n    if (styleUrl[0] !== \"#\") {\n      styleUrl = \"#\" + styleUrl;\n    }\n\n    properties.styleUrl = styleUrl;\n    if (styleIndex[styleUrl]) {\n      properties.styleHash = styleIndex[styleUrl];\n    }\n    if (styleMapIndex[styleUrl]) {\n      properties.styleMapHash = styleMapIndex[styleUrl];\n      properties.styleHash = styleIndex[styleMapIndex[styleUrl].normal];\n    }\n    // Try to populate the lineStyle or polyStyle since we got the style hash\n    const style = styleByHash[properties.styleHash];\n    if (style) {\n      if (!lineStyle) lineStyle = get1(style, \"LineStyle\");\n      if (!polyStyle) polyStyle = get1(style, \"PolyStyle\");\n      const iconStyle = get1(style, \"IconStyle\");\n      if (iconStyle) {\n        const icon = get1(iconStyle, \"Icon\");\n        if (icon) {\n          const href = nodeVal(get1(icon, \"href\"));\n          if (href) properties.icon = href;\n        }\n      }\n    }\n  }\n  if (description) properties.description = description;\n  if (timeSpan) {\n    const begin = nodeVal(get1(timeSpan, \"begin\"));\n    const end = nodeVal(get1(timeSpan, \"end\"));\n    properties.timespan = { begin: begin, end: end };\n  }\n  if (timeStamp) {\n    properties.timestamp = nodeVal(get1(timeStamp, \"when\"));\n  }\n  if (lineStyle) {\n    const linestyles = kmlColor(nodeVal(get1(lineStyle, \"color\"))),\n      color = linestyles[0],\n      opacity = linestyles[1],\n      width = parseFloat(nodeVal(get1(lineStyle, \"width\")));\n    if (color) properties.stroke = color;\n    if (!isNaN(opacity)) properties[\"stroke-opacity\"] = opacity;\n    if (!isNaN(width)) properties[\"stroke-width\"] = width;\n  }\n  if (polyStyle) {\n    const polystyles = kmlColor(nodeVal(get1(polyStyle, \"color\")));\n    const pcolor = polystyles[0];\n    const popacity = polystyles[1];\n    const fill = nodeVal(get1(polyStyle, \"fill\"));\n    const outline = nodeVal(get1(polyStyle, \"outline\"));\n    if (pcolor) properties.fill = pcolor;\n    if (!isNaN(popacity)) properties[\"fill-opacity\"] = popacity;\n    if (fill)\n      properties[\"fill-opacity\"] =\n        fill === \"1\" ? properties[\"fill-opacity\"] || 1 : 0;\n    if (outline)\n      properties[\"stroke-opacity\"] =\n        outline === \"1\" ? properties[\"stroke-opacity\"] || 1 : 0;\n  }\n  if (extendedData) {\n    const datas = extendedData.getElementsByTagName(\"Data\"),\n      simpleDatas = extendedData.getElementsByTagName(\"SimpleData\");\n\n    for (i = 0; i < datas.length; i++) {\n      properties[datas[i].getAttribute(\"name\")] = nodeVal(\n        get1(datas[i], \"value\")\n      );\n    }\n    for (i = 0; i < simpleDatas.length; i++) {\n      properties[simpleDatas[i].getAttribute(\"name\")] = nodeVal(simpleDatas[i]);\n    }\n  }\n  if (visibility) {\n    properties.visibility = nodeVal(visibility);\n  }\n  if (geomsAndTimes.coordTimes.length) {\n    properties.coordTimes =\n      geomsAndTimes.coordTimes.length === 1\n        ? geomsAndTimes.coordTimes[0]\n        : geomsAndTimes.coordTimes;\n  }\n  const feature = {\n    type: \"Feature\",\n    geometry:\n      geomsAndTimes.geoms.length === 1\n        ? geomsAndTimes.geoms[0]\n        : {\n            type: \"GeometryCollection\",\n            geometries: geomsAndTimes.geoms\n          },\n    properties: properties\n  };\n  if (root.getAttribute(\"id\")) feature.id = root.getAttribute(\"id\");\n  return feature;\n}\n\nexport function* kmlGen(doc) {\n  // styleindex keeps track of hashed styles in order to match feature\n  const styleIndex = {};\n  const styleByHash = {};\n  // stylemapindex keeps track of style maps to expose in properties\n  const styleMapIndex = {};\n  // atomic geospatial types supported by KML - MultiGeometry is\n  // handled separately\n  // all root placemarks in the file\n  const placemarks = doc.getElementsByTagName(\"Placemark\");\n  const styles = doc.getElementsByTagName(\"Style\");\n  const styleMaps = doc.getElementsByTagName(\"StyleMap\");\n\n  for (let k = 0; k < styles.length; k++) {\n    const hash = okhash(xml2str(styles[k])).toString(16);\n    styleIndex[\"#\" + styles[k].getAttribute(\"id\")] = hash;\n    styleByHash[hash] = styles[k];\n  }\n  for (let l = 0; l < styleMaps.length; l++) {\n    styleIndex[\"#\" + styleMaps[l].getAttribute(\"id\")] = okhash(\n      xml2str(styleMaps[l])\n    ).toString(16);\n    const pairs = styleMaps[l].getElementsByTagName(\"Pair\");\n    const pairsMap = {};\n    for (let m = 0; m < pairs.length; m++) {\n      pairsMap[nodeVal(get1(pairs[m], \"key\"))] = nodeVal(\n        get1(pairs[m], \"styleUrl\")\n      );\n    }\n    styleMapIndex[\"#\" + styleMaps[l].getAttribute(\"id\")] = pairsMap;\n  }\n  for (let j = 0; j < placemarks.length; j++) {\n    const feature = getPlacemark(\n      placemarks[j],\n      styleIndex,\n      styleMapIndex,\n      styleByHash\n    );\n    if (feature) yield feature;\n  }\n}\n\nexport function kml(doc) {\n  return {\n    type: \"FeatureCollection\",\n    features: Array.from(kmlGen(doc))\n  };\n}\n"],"names":["nodeVal","x","normalize","textContent","getLineStyle","extensions","style","lineStyle","get1","color","opacity","parseFloat","width","stroke","isNaN","getMulti","ys","o","n","k","length","getProperties","node","prop","links","getElementsByTagName","i","push","Object","assign","href","getAttribute","y","coordPair","ll","ele","heartRate","time","e","coordinates","getRoute","line","getPoints","type","properties","geometry","pointname","pts","times","l","heartRates","undefined","c","Array","fill","getTrack","segments","track","s","coordTimes","gpxGen","doc","tracks","routes","waypoints","feature","removeSpace","trimSpace","splitSpace","okhash","h","charCodeAt","coord1","v","replace","split","map","coord","xml2str","xml","tagName","output","attributes","name","value","childNodes","nodeName","nodeValue","trim","geotypes","kmlColor","substr","parseInt","gxCoords","root","elems","coords","timeElems","j","getPlacemark","styleIndex","styleMapIndex","styleByHash","geomsAndTimes","getGeometry","geomNode","geomNodes","geoms","rings","address","styleUrl","description","timeSpan","timeStamp","extendedData","polyStyle","visibility","styleHash","styleMapHash","normal","iconStyle","icon","begin","end","timespan","timestamp","linestyles","polystyles","pcolor","popacity","outline","datas","simpleDatas","geometries","id","kmlGen","placemarks","styles","styleMaps","hash","toString","pairs","pairsMap","m","features","from"],"mappings":"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"}